{"map":"{\"version\":3,\"sources\":[\"/Users/anshluthra/Downloads/covidrepo-main/src/serviceWorker.js\",\"/Users/anshluthra/Downloads/covidrepo-main/src/i18n/index.js\",\"/Users/anshluthra/Downloads/covidrepo-main/src/index.js\"],\"names\":[\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"config\",\"navigator\",\"serviceWorker\",\"register\",\"then\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"state\",\"controller\",\"console\",\"log\",\"onUpdate\",\"onSuccess\",\"catch\",\"error\",\"i18n\",\"use\",\"Backend\",\"LanguageDetector\",\"initReactI18next\",\"init\",\"debug\",\"isDevelopmentOrTest\",\"keySeparator\",\"returnEmptyString\",\"fallbackLng\",\"load\",\"backend\",\"loadPath\",\"addPath\",\"saveMissing\",\"interpolation\",\"escapeValue\",\"App\",\"lazy\",\"__webpack_require__\",\"e\",\"bind\",\"rootElement\",\"document\",\"getElementById\",\"main\",\"render\",\"react_default\",\"a\",\"createElement\",\"react\",\"fallback\",\"react_router_dom\",\"requestIdleCallback\",\"IntersectionObserver\",\"src\",\"done\",\"js\",\"onload\",\"onerror\",\"Error\",\"head\",\"appendChild\",\"loadScript\",\"URL\",\"process\",\"href\",\"origin\",\"addEventListener\",\"setTimeout\",\"concat\",\"fetch\",\"headers\",\"Service-Worker\",\"response\",\"contentType\",\"get\",\"status\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\"],\"mappings\":\"qhLAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAwCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,iDCzFjEC,EAAAA,EACGC,IAAIC,EAAAA,GACJD,IAAIE,EAAAA,GACJF,IAAIG,EAAAA,GACJC,KAAK,CACJC,MAAOC,OAAAA,EAAAA,oBAAAA,KAPG,EAQVC,cAAc,EACdC,mBAAmB,EACnBC,YAAa,UACbC,KAAM,eACNC,QAAS,CACPC,SAAU,2DACVC,QAAS,0BAEXC,YAAaR,OAAAA,EAAAA,oBAAAA,KAhBH,EAiBVS,cAAe,CACbC,aAAa,KAIJjB,EAAf,EAAeA,oBCrBTkB,EAAMC,OAAAA,EAAAA,KAAAA,CAAK,WAAA,OAAMC,EAAAC,EAAA,GAAAnC,KAAAkC,EAAAE,KAAA,KAAA,OACjBC,EAAcC,SAASC,eAAe,QAEtCC,EAAO,WAAA,OACXC,OAAAA,EAAAA,OAAAA,CACEC,EAAAC,EAAAC,cAACC,EAAA,SAAD,CAAUC,SAAUJ,EAAAC,EAAAC,cAAA,MAAA,OAClBF,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACZ,EAAD,QAGJK,IAIK/C,OAAO0D,qBAAuB1D,OAAO2D,qBAgB5CT,IAbiB,SAACU,EAAKC,GACvB,IAAMC,EAAKd,SAASM,cAAc,UAClCQ,EAAGF,IAAMA,EACTE,EAAGC,OAAS,WACVF,KAEFC,EAAGE,QAAU,WACXH,EAAK,IAAII,MAAM,yBAA2BL,KAE5CZ,SAASkB,KAAKC,YAAYL,GAM1BM,CACE,4GACAlB,GFpBG,SAAkB5C,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI8D,IAAIC,GAAwBtE,OAAOC,SAASsE,MACpDC,SAAWxE,OAAOC,SAASuE,OAIvC,OAGFxE,OAAOyE,iBAAiB,OAAQ,WAAA,OAC9BC,WAAW,WACT,IAAMrE,EAAK,GAAAsE,OAAML,GAAN,sBAEPxE,GAiEZ,SAAiCO,EAAOC,GAEtCsE,MAAMvE,EAAO,CACXwE,QAAS,CAACC,iBAAkB,YAE3BpE,KAAK,SAACqE,GAEL,IAAMC,EAAcD,EAASF,QAAQI,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C5E,UAAUC,cAAc4E,MAAM1E,KAAK,SAACC,GAClCA,EAAa0E,aAAa3E,KAAK,WAC7BV,OAAOC,SAASqF,aAKpBlF,EAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEAxFEoE,CAAwBlF,EAAOC,GAI/BC,UAAUC,cAAc4E,MAAM1E,KAAK,WACjCQ,QAAQC,IACN,gHAMJf,EAAgBC,EAAOC,IAExB,QEPTE\",\"sourcesContent\":[\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\nimport React from 'react';\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.0/8 are considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () =>\\n      setTimeout(() => {\\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n        if (isLocalhost) {\\n          // This is running on localhost. Let's check if a service worker still exists or not.\\n          checkValidServiceWorker(swUrl, config);\\n\\n          // Add some additional logging to localhost, pointing developers to the\\n          // service worker/PWA documentation.\\n          navigator.serviceWorker.ready.then(() => {\\n            console.log(\\n              'This web app is being served cache-first by a service ' +\\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n            );\\n          });\\n        } else {\\n          // Is not localhost. Just register service worker\\n          registerValidSW(swUrl, config);\\n        }\\n      }, 3000)\\n    );\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then((registration) => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch((error) => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl, {\\n    headers: {'Service-Worker': 'script'},\\n  })\\n    .then((response) => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then((registration) => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready\\n      .then((registration) => {\\n        registration.unregister();\\n      })\\n      .catch((error) => {\\n        console.error(error.message);\\n      });\\n  }\\n}\\n\",\"import {isDevelopmentOrTest} from '../utils/commonFunctions';\\n\\nimport i18n from 'i18next';\\nimport LanguageDetector from 'i18next-browser-languagedetector';\\nimport Backend from 'i18next-http-backend';\\nimport {initReactI18next} from 'react-i18next';\\nimport React from 'react';\\nconst DEBUG = false;\\n\\ni18n\\n  .use(Backend)\\n  .use(LanguageDetector)\\n  .use(initReactI18next)\\n  .init({\\n    debug: isDevelopmentOrTest() && DEBUG,\\n    keySeparator: false,\\n    returnEmptyString: false,\\n    fallbackLng: 'english',\\n    load: 'languageOnly',\\n    backend: {\\n      loadPath: 'https://api.covid19india.org/locales/locale_{{lng}}.json',\\n      addPath: 'http://localhost:9999/',\\n    },\\n    saveMissing: isDevelopmentOrTest() && DEBUG,\\n    interpolation: {\\n      escapeValue: false,\\n    },\\n  });\\n\\nexport default i18n;\\n\",\"// import './wdyr';\\nimport * as serviceWorker from './serviceWorker';\\nimport './i18n';\\nimport React from 'react';\\nimport {Suspense, lazy} from 'react';\\nimport {render} from 'react-dom';\\nimport {BrowserRouter as Router} from 'react-router-dom';\\n\\nconst App = lazy(() => import('./App'));\\nconst rootElement = document.getElementById('root');\\n\\nconst main = () =>\\n  render(\\n    <Suspense fallback={<div />}>\\n      <Router>\\n        <App />\\n      </Router>\\n    </Suspense>,\\n    rootElement\\n  );\\n\\nconst browserSupportsAllFeatures = () => {\\n  return window.requestIdleCallback && window.IntersectionObserver;\\n};\\n\\nconst loadScript = (src, done) => {\\n  const js = document.createElement('script');\\n  js.src = src;\\n  js.onload = function () {\\n    done();\\n  };\\n  js.onerror = function () {\\n    done(new Error('Failed to load script ' + src));\\n  };\\n  document.head.appendChild(js);\\n};\\n\\nif (browserSupportsAllFeatures()) {\\n  main();\\n} else {\\n  loadScript(\\n    'https://polyfill.io/v3/polyfill.min.js?version=3.52.1&features=requestIdleCallback%2CIntersectionObserver',\\n    main\\n  );\\n}\\n\\nserviceWorker.register();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t){throw new Error(\"Module parse failed: Unexpected token (3:114)\\nYou may need an appropriate loader to handle this file type.\\n| import _objectSpread from\\\"/Users/anshluthra/Downloads/covidrepo-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\\\";import{INDIA_ISO_SUFFIX,ISO_DATE_REGEX,LOCALE_SHORTHANDS,NAN_STATISTICS,PER_MILLION_OPTIONS,STATISTIC_OPTIONS,TESTED_LOOKBACK_DAYS}from'../constants';import{differenceInDays,format,formatDistance,formatISO,subDays}from'date-fns';import{utcToZonedTime}from'date-fns-tz';import i18n from'i18next';var locale=null;var numberFormatter=new Intl.NumberFormat('en-IN',{maximumFractionDigits:1});var getLocale=function getLocale(){import('date-fns/locale/').then(function(localePackage){locale=localePackage[LOCALE_SHORTHANDS[i18n.language||window.localStorage.i18nextLng]];});};export var isDevelopmentOrTest=function isDevelopmentOrTest(){if(process.env.NODE_ENV==='development'||process.env.NODE_ENV==='test')return true;return false;};export var getIndiaDate=function getIndiaDate(){return utcToZonedTime(new Date(),'Asia/Kolkata');};export var getIndiaDateISO=function getIndiaDateISO(){return formatISO(getIndiaDate(),{representation:'date'});};export var getIndiaDateYesterday=function getIndiaDateYesterday(){return subDays(getIndiaDate(),1);};export var getIndiaDateYesterdayISO=function getIndiaDateYesterdayISO(){return formatISO(getIndiaDateYesterday(),{representation:'date'});};export var formatLastUpdated=function formatLastUpdated(unformattedDate){getLocale();return formatDistance(new Date(unformattedDate),new Date(),{locale:locale});};export var parseIndiaDate=function parseIndiaDate(isoDate){if(!isoDate)return getIndiaDate();if(isoDate.match(ISO_DATE_REGEX))isoDate+=INDIA_ISO_SUFFIX;return utcToZonedTime(new Date(isoDate),'Asia/Kolkata');};export var formatDate=function formatDate(unformattedDate,formatString){if(!unformattedDate)return'';if(typeof unformattedDate==='string'&&unformattedDate.match(ISO_DATE_REGEX))unformattedDate+=INDIA_ISO_SUFFIX;var date=utcToZonedTime(new Date(unformattedDate),'Asia/Kolkata');return format(date,formatString,{locale:locale});};export var abbreviateNumber=function abbreviateNumber(number){if(Math.abs(number)<1e3)return numberFormatter.format(number);else if(Math.abs(number)>=1e3&&Math.abs(number)<1e5)return numberFormatter.format(number/1e3)+'K';else if(Math.abs(number)>=1e5&&Math.abs(number)<1e7)return numberFormatter.format(number/1e5)+'L';else if(Math.abs(number)>=1e7&&Math.abs(number)<1e10)return numberFormatter.format(number/1e7)+'Cr';else if(Math.abs(number)>=1e10&&Math.abs(number)<1e14)return numberFormatter.format(number/1e10)+'K Cr';else if(Math.abs(number)>=1e14)return numberFormatter.format(number/1e14)+'L Cr';};export var formatNumber=function formatNumber(value,option,statistic){if(statistic&&NAN_STATISTICS.includes(statistic)&&value===0)value=NaN;if(isNaN(value))return'-';else if(option==='short'){return abbreviateNumber(value);}else if(option==='int'){value=Math.floor(value);}return numberFormatter.format(value)+(option==='%'?'%':'');};export var capitalize=function capitalize(s){if(typeof s!=='string')return'';return s.charAt(0).toUpperCase()+s.slice(1);};export var toTitleCase=function toTitleCase(str){return str.replace(/\\\\w\\\\S*/g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase();});};export var getStatistic=function getStatistic(data,type,statistic){var _ref=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{},_ref$perMillion=_ref.perMillion,perMillion=_ref$perMillion===void 0?false:_ref$perMillion,_ref$movingAverage=_ref.movingAverage,movingAverage=_ref$movingAverage===void 0?false:_ref$movingAverage;// TODO: Replace delta with daily to remove ambiguity\\n| //       Or add another type for daily/delta\\n> var _STATISTIC_OPTIONS$st=_objectSpread({},STATISTIC_OPTIONS[statistic],perMillion&&!STATISTIC_OPTIONS[statistic]?.normalizeByKey&&PER_MILLION_OPTIONS),key=_STATISTIC_OPTIONS$st.key,normalizeBy=_STATISTIC_OPTIONS$st.normalizeByKey;var multiplyFactor=STATISTIC_OPTIONS[statistic]?.multiplyFactor||1;multiplyFactor*=!STATISTIC_OPTIONS[statistic]?.normalizeByKey&&perMillion&&PER_MILLION_OPTIONS?.multiplyFactor||1;if(type==='delta'&&movingAverage){type='delta7';multiplyFactor*=!STATISTIC_OPTIONS[statistic]?.normalizeByKey&&1/7||1;}var count;if(key==='population'){count=type==='total'?data?.meta?.population:0;}else if(key==='tested'){count=data?.[type]?.tested;}else if(key==='active'){var confirmed=data?.[type]?.confirmed||0;var deceased=data?.[type]?.deceased||0;var recovered=data?.[type]?.recovered||0;var other=data?.[type]?.other||0;count=confirmed-deceased-recovered-other;}else{count=data?.[type]?.[key];}if(normalizeBy){count/=getStatistic(data,normalizeBy==='population'?'total':type,normalizeBy);}return multiplyFactor*(isFinite(count)&&count||0);};export var getTableStatistic=function getTableStatistic(data,statistic,args,lastUpdatedTT){var expired=(STATISTIC_OPTIONS[statistic].key==='tested'||STATISTIC_OPTIONS[statistic].normalizeByKey==='tested')&&differenceInDays(lastUpdatedTT,parseIndiaDate(data.meta?.tested?.['last_updated']))>TESTED_LOOKBACK_DAYS;var total=!expired?getStatistic(data,'total',statistic,args):0;var delta=!expired?getStatistic(data,'delta',statistic,args):0;return{total:total,delta:delta};};export var fetcher=function fetcher(url){return fetch(url).then(function(response){return response.json();});};\")},30:function(e,t,a){e.exports=a(42)},42:function(e,t,a){\"use strict\";a.r(t);var r=a(0),n=a.n(r),o=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function i(e,t){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var a=e.installing;null!=a&&(a.onstatechange=function(){\"installed\"===a.state&&(navigator.serviceWorker.controller?(console.log(\"New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.\"),t&&t.onUpdate&&t.onUpdate(e)):(console.log(\"Content is cached for offline use.\"),t&&t.onSuccess&&t.onSuccess(e)))})}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}var s=a(14),l=a(17),c=a(23),u=a(24),d=a(44);l.a.use(u.a).use(c.a).use(d.e).init({debug:Object(s.isDevelopmentOrTest)()&&!1,keySeparator:!1,returnEmptyString:!1,fallbackLng:\"english\",load:\"languageOnly\",backend:{loadPath:\"https://api.covid19india.org/locales/locale_{{lng}}.json\",addPath:\"http://localhost:9999/\"},saveMissing:Object(s.isDevelopmentOrTest)()&&!1,interpolation:{escapeValue:!1}});l.a;var m=a(28),f=a(21),p=Object(r.lazy)(function(){return a.e(4).then(a.bind(null,69))}),v=document.getElementById(\"root\"),I=function(){return Object(m.render)(n.a.createElement(r.Suspense,{fallback:n.a.createElement(\"div\",null)},n.a.createElement(f.a,null,n.a.createElement(p,null))),v)};window.requestIdleCallback&&window.IntersectionObserver?I():function(e,t){var a=document.createElement(\"script\");a.src=e,a.onload=function(){t()},a.onerror=function(){t(new Error(\"Failed to load script \"+e))},document.head.appendChild(a)}(\"https://polyfill.io/v3/polyfill.min.js?version=3.52.1&features=requestIdleCallback%2CIntersectionObserver\",I),function(e){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location.href).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){return setTimeout(function(){var t=\"\".concat(\"\",\"/service-worker.js\");o?(function(e,t){fetch(e,{headers:{\"Service-Worker\":\"script\"}}).then(function(a){var r=a.headers.get(\"content-type\");404===a.status||null!=r&&-1===r.indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):i(e,t)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(t,e),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA\")})):i(t,e)},3e3)})}}()}},[[30,1,2]]]);","extractedComments":[]}