{"ast":null,"code":"var _jsxFileName = \"/Users/anshluthra/Downloads/covidrepo-main/src/components/LanguageSwitcher.js\";\nimport { ENTER_IN, ENTER_OUT } from '../animations';\nimport locales from '../i18n/locales.json';\nimport React from 'react';\nimport classnames from 'classnames';\nimport { memo, useRef, useCallback } from 'react';\nimport { ArrowUp } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nimport { useTransition, animated } from 'react-spring';\nimport { useClickAway } from 'react-use';\n\nfunction LanguageSwitcher(_ref) {\n  var _this = this;\n\n  var showLanguageSwitcher = _ref.showLanguageSwitcher,\n      setShowLanguageSwitcher = _ref.setShowLanguageSwitcher;\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n;\n\n  var currentLanguage = Object.keys(locales).includes(i18n?.language) ? i18n?.language : i18n?.options?.fallbackLng[0];\n  var transitions = useTransition(showLanguageSwitcher, null, {\n    from: ENTER_OUT,\n    enter: ENTER_IN,\n    leave: ENTER_OUT,\n    config: {\n      mass: 1,\n      tension: 100,\n      friction: 15\n    }\n  });\n  var languageSwitcherRef = useRef();\n  useClickAway(languageSwitcherRef, function () {\n    setShowLanguageSwitcher(false);\n  });\n  var switchLanguage = useCallback(function (languageKey) {\n    if (i18n) i18n.changeLanguage(languageKey);\n  }, [i18n]);\n  return transitions.map(function (_ref2) {\n    var item = _ref2.item,\n        key = _ref2.key,\n        props = _ref2.props;\n    return item ? /*#__PURE__*/React.createElement(animated.div, {\n      key: key,\n      className: \"LanguageSwitcher\",\n      style: props,\n      ref: languageSwitcherRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"We speak the following languages\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"languages\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, Object.keys(locales).map(function (languageKey) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: languageKey,\n        className: classnames('language', {\n          'is-highlighted': currentLanguage === languageKey\n        }),\n        onClick: switchLanguage.bind(_this, languageKey),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, locales[languageKey]));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"close-button\",\n      onClick: setShowLanguageSwitcher.bind(_this, false),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ArrowUp, {\n      width: 16,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }))) : /*#__PURE__*/React.createElement(animated.div, {\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    });\n  });\n}\n\nexport default memo(LanguageSwitcher);","map":{"version":3,"sources":["/Users/anshluthra/Downloads/covidrepo-main/src/components/LanguageSwitcher.js"],"names":["ENTER_IN","ENTER_OUT","locales","React","classnames","memo","useRef","useCallback","ArrowUp","useTranslation","useTransition","animated","useClickAway","LanguageSwitcher","showLanguageSwitcher","setShowLanguageSwitcher","i18n","currentLanguage","Object","keys","includes","language","options","fallbackLng","transitions","from","enter","leave","config","mass","tension","friction","languageSwitcherRef","switchLanguage","languageKey","changeLanguage","map","item","key","props","bind"],"mappings":"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","sourcesContent":["import {ENTER_IN, ENTER_OUT} from '../animations';\nimport locales from '../i18n/locales.json';\nimport React from 'react';\nimport classnames from 'classnames';\nimport {memo, useRef, useCallback} from 'react';\nimport {ArrowUp} from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {useTransition, animated} from 'react-spring';\nimport {useClickAway} from 'react-use';\n\nfunction LanguageSwitcher({showLanguageSwitcher, setShowLanguageSwitcher}) {\n  const {i18n} = useTranslation();\n  const currentLanguage = Object.keys(locales).includes(i18n?.language)\n    ? i18n?.language\n    : i18n?.options?.fallbackLng[0];\n\n  const transitions = useTransition(showLanguageSwitcher, null, {\n    from: ENTER_OUT,\n    enter: ENTER_IN,\n    leave: ENTER_OUT,\n    config: {\n      mass: 1,\n      tension: 100,\n      friction: 15,\n    },\n  });\n\n  const languageSwitcherRef = useRef();\n  useClickAway(languageSwitcherRef, () => {\n    setShowLanguageSwitcher(false);\n  });\n\n  const switchLanguage = useCallback(\n    (languageKey) => {\n      if (i18n) i18n.changeLanguage(languageKey);\n    },\n    [i18n]\n  );\n\n  return transitions.map(({item, key, props}) =>\n    item ? (\n      <animated.div\n        key={key}\n        className=\"LanguageSwitcher\"\n        style={props}\n        ref={languageSwitcherRef}\n      >\n        <h3>We speak the following languages</h3>\n\n        <div className=\"languages\">\n          {Object.keys(locales).map((languageKey) => (\n            <div\n              key={languageKey}\n              className={classnames('language', {\n                'is-highlighted': currentLanguage === languageKey,\n              })}\n              onClick={switchLanguage.bind(this, languageKey)}\n            >\n              <span>{locales[languageKey]}</span>\n            </div>\n          ))}\n        </div>\n\n        <div\n          className=\"close-button\"\n          onClick={setShowLanguageSwitcher.bind(this, false)}\n        >\n          <ArrowUp width={16} />\n        </div>\n      </animated.div>\n    ) : (\n      <animated.div key={key}></animated.div>\n    )\n  );\n}\n\nexport default memo(LanguageSwitcher);\n"]},"metadata":{},"sourceType":"module"}